import { useState } from 'react'
import Header from './components/home/header'
import Layout from '@/components/layout'
import { useLists } from '@/hooks/lists'
import { getAllLists, ListTypes } from 'lib/db'
import Head from 'next/head'
import ListComponent from './components/home/list-components'
import ListModalCreate from './components/home/list-modal-create'
import ListModalDeleteConfirme from './components/home/list-modal-delete-confirme'
import { CartVazio } from '@/components/cart/cart-vazio'

interface TypesList {
  lists: ListTypes[]
}

export default function Home({ lists }: TypesList) {
  const [isVisibleModalCreate, setIsVisibleModalCreate] = useState(false)
  const [isVisibleModalDelete, setIsVisibleModalDelete] = useState(false)
  const [listId, setListId] = useState(0)
  const [listName, setListName] = useState('')
  const { loading } = useLists()

  function handleOpenModal() {
    setIsVisibleModalCreate(!isVisibleModalCreate)
  }

  function handleDelete(list: ListTypes) {
    setIsVisibleModalDelete(!isVisibleModalDelete)
    setListId(list.id)
    setListName(list.title)
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Layout>
          <Header handleOpenModal={handleOpenModal} />

          <div className="w-full h-full max-w-screen-md bg-default overflow-auto drop-shadow-lg mt-1">
            {lists.length === 0 ? (
              <div className="flex w-full h-full justify-center items-center ">
                <CartVazio menseger="Não há lista cadastrada" />
              </div>
            ) : (
              lists.map(list => <ListComponent list={list} key={list.id} handleDelete={() => handleDelete(list)} />)
            )}
          </div>
          {isVisibleModalCreate && (
            <ListModalCreate
              isVisibleModalCreate={isVisibleModalDelete}
              setIsVisibleModalCreate={setIsVisibleModalCreate}
            />
          )}

          {isVisibleModalDelete && (
            <ListModalDeleteConfirme
              isVisible={isVisibleModalDelete}
              setIsVisible={setIsVisibleModalDelete}
              listId={listId}
              listName={listName}
            />
          )}
        </Layout>
      </main>
    </>
  )
}

export async function getServerSideProps() {
  const data = await getAllLists()
  const lists = JSON.parse(JSON.stringify(data))

  return { props: { lists } }
}
